{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/configurations/index.ts"],"names":[],"mappings":";AAAA,MAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,MAAY,IAAI,WAAM,MAAM,CAAC,CAAA;AAE7B,qBAAqB;AACrB,MAAM,OAAO,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC;IACjC,GAAG,EAAE,IAAI;IACT,IAAI,EAAE,IAAI;IACV,KAAK,EAAE;QACL,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,mBAAmB,CAAC;KAEhD;CACF,CAAC,CAAC;AASH,wCAAwC;AACxC,gCAAgC;AAChC,IAAI;AAEJ,4DAA4D;AAC5D,sCAAsC;AACtC,IAAI;AAEJ;IACI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACjC,CAAC;AAFe,wBAAgB,mBAE/B,CAAA","sourcesContent":["import * as nconf from \"nconf\";\nimport * as path from \"path\";\n\n//Read Configurations\nconst configs = new nconf.Provider({\n  env: true,\n  argv: true,\n  store: {\n    type: 'file',\n    file: path.join(__dirname, `./config.dev.json`)\n    //file: path.join(__dirname, `./config.${process.env.NODE_ENV || \"dev\"}.json`)\n  }\n});\n\nexport interface IServerConfigurations {\n    port: number;\n    plugins: Array<string>;\n    jwtSecret: string;\n    jwtExpiration: string;\n}\n\n// export interface IDataConfiguration {\n//     connectionString: string;\n// }\n\n// export function getDatabaseConfig(): IDataConfiguration {\n//     return configs.get(\"database\");\n// }\n\nexport function getServerConfigs(): IServerConfigurations {\n    return configs.get(\"server\");\n}\n"]}