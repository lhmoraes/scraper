{"version":3,"file":"server.js","sourceRoot":"","sources":["../../src/server.ts"],"names":[],"mappings":";AAAA,MAAY,IAAI,WAAM,MAAM,CAAC,CAAA;AAG7B,oCAAoC;AACpC,oCAAoC;AACpC,MAAY,OAAO,WAAM,WAAW,CAAC,CAAA;AACrC,0CAA0C;AAG1C,8EAA8E;AAC9E,cAAqB,OAA8B;IAC/C,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC;IAC9C,MAAM,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;IAEjC,MAAM,CAAC,UAAU,CAAC;QACd,IAAI,EAAE,IAAI;QACV,MAAM,EAAE;YACJ,IAAI,EAAE,IAAI;SACb;KACJ,CAAC,CAAC;IAEH,sBAAsB;IACtB,MAAM,OAAO,GAAkB,OAAO,CAAC,OAAO,CAAC;IAC/C,MAAM,aAAa,GAAG;QAClB,sBAAsB;QACtB,aAAa,EAAE,OAAO;KACzB,CAAC;IAGN,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAEjB,OAAO,CAAC,OAAO,CAAC,CAAC,UAAkB;QAC/B,IAAI,MAAM,GAAY,CAAC,OAAO,CAAC,YAAY,GAAG,UAAU,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;QACrE,OAAO,CAAC,GAAG,CAAC,mBAAmB,MAAM,CAAC,IAAI,EAAE,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;QAC/E,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,eAAe;IACf,yCAAyC;IACzC,yCAAyC;IACzC,2CAA2C;IAC3C,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAE9B,MAAM,CAAC,MAAM,CAAC;AAClB,CAAC;AAlCe,YAAI,OAkCnB,CAAA;AAAA,CAAC","sourcesContent":["import * as Hapi from \"hapi\";\nimport { IPlugin } from \"./plugins/interfaces\";\nimport { IServerConfigurations } from \"./configurations\";\n// import * as Tasks from \"./tasks\";\n// import * as Users from \"./users\";\nimport * as Scraper from \"./scraper\";\n// import { IDatabase } from \"./database\";\n\n\n// export function init(configs: IServerConfigurations, database: IDatabase) {\nexport function init(configs: IServerConfigurations) {\n    const port = process.env.port || configs.port;\n    const server = new Hapi.Server();\n\n    server.connection({\n        port: port,\n        routes: {\n            cors: true\n        }\n    });\n\n    //  Setup Hapi Plugins\n    const plugins: Array<string> = configs.plugins;\n    const pluginOptions = {\n        // database: database,\n        serverConfigs: configs\n    };\n\n\nconsole.log(plugins);\n\n    plugins.forEach((pluginName: string) => {\n        var plugin: IPlugin = (require(\"./plugins/\" + pluginName)).default();\n        console.log(`Register Plugin ${plugin.info().name} v${plugin.info().version}`);\n        plugin.register(server, pluginOptions);\n    });\n\n    //Init Features\n    // Tasks.init(server, configs, database);\n    // Users.init(server, configs, database);\n    // Scraper.init(server, configs, database);\n    Scraper.init(server, configs);\n\n    return server;\n};\n"]}